// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IpcMessages.proto

#include "IpcMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_IpcMessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CefAdapterException;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateBrowserWindowRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecuteJavaScriptRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnBrowserClosedRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnBrowserCreatedRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnContextCreatedRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnQueryRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryFailureRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuerySuccessRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetBrowserWindowSizeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SetBrowserWindowTitleRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IpcMessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShowDeveloperToolsRequest;
}  // namespace protobuf_IpcMessages_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace CefAdapter {
class CreateBrowserWindowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateBrowserWindowRequest>
      _instance;
} _CreateBrowserWindowRequest_default_instance_;
class SetBrowserWindowTitleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBrowserWindowTitleRequest>
      _instance;
} _SetBrowserWindowTitleRequest_default_instance_;
class SetBrowserWindowSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBrowserWindowSizeRequest>
      _instance;
} _SetBrowserWindowSizeRequest_default_instance_;
class ShowDeveloperToolsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShowDeveloperToolsRequest>
      _instance;
} _ShowDeveloperToolsRequest_default_instance_;
class ExecuteJavaScriptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteJavaScriptRequest>
      _instance;
} _ExecuteJavaScriptRequest_default_instance_;
class QuerySuccessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuerySuccessRequest>
      _instance;
} _QuerySuccessRequest_default_instance_;
class QueryFailureRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryFailureRequest>
      _instance;
} _QueryFailureRequest_default_instance_;
class ToCefAdapterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToCefAdapterRequest>
      _instance;
} _ToCefAdapterRequest_default_instance_;
class OnBrowserCreatedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnBrowserCreatedRequest>
      _instance;
} _OnBrowserCreatedRequest_default_instance_;
class OnBrowserClosedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnBrowserClosedRequest>
      _instance;
} _OnBrowserClosedRequest_default_instance_;
class OnContextCreatedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnContextCreatedRequest>
      _instance;
} _OnContextCreatedRequest_default_instance_;
class OnQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnQueryRequest>
      _instance;
} _OnQueryRequest_default_instance_;
class FromCefAdapterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FromCefAdapterRequest>
      _instance;
} _FromCefAdapterRequest_default_instance_;
class CefAdapterExceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CefAdapterException>
      _instance;
} _CefAdapterException_default_instance_;
class CefAdapterReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CefAdapterReply>
      _instance;
} _CefAdapterReply_default_instance_;
}  // namespace CefAdapter
namespace protobuf_IpcMessages_2eproto {
static void InitDefaultsCreateBrowserWindowRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_CreateBrowserWindowRequest_default_instance_;
    new (ptr) ::CefAdapter::CreateBrowserWindowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::CreateBrowserWindowRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateBrowserWindowRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateBrowserWindowRequest}, {}};

static void InitDefaultsSetBrowserWindowTitleRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_SetBrowserWindowTitleRequest_default_instance_;
    new (ptr) ::CefAdapter::SetBrowserWindowTitleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::SetBrowserWindowTitleRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetBrowserWindowTitleRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetBrowserWindowTitleRequest}, {}};

static void InitDefaultsSetBrowserWindowSizeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_SetBrowserWindowSizeRequest_default_instance_;
    new (ptr) ::CefAdapter::SetBrowserWindowSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::SetBrowserWindowSizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetBrowserWindowSizeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetBrowserWindowSizeRequest}, {}};

static void InitDefaultsShowDeveloperToolsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_ShowDeveloperToolsRequest_default_instance_;
    new (ptr) ::CefAdapter::ShowDeveloperToolsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::ShowDeveloperToolsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShowDeveloperToolsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShowDeveloperToolsRequest}, {}};

static void InitDefaultsExecuteJavaScriptRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_ExecuteJavaScriptRequest_default_instance_;
    new (ptr) ::CefAdapter::ExecuteJavaScriptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::ExecuteJavaScriptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecuteJavaScriptRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecuteJavaScriptRequest}, {}};

static void InitDefaultsQuerySuccessRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_QuerySuccessRequest_default_instance_;
    new (ptr) ::CefAdapter::QuerySuccessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::QuerySuccessRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuerySuccessRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuerySuccessRequest}, {}};

static void InitDefaultsQueryFailureRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_QueryFailureRequest_default_instance_;
    new (ptr) ::CefAdapter::QueryFailureRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::QueryFailureRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryFailureRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryFailureRequest}, {}};

static void InitDefaultsToCefAdapterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_ToCefAdapterRequest_default_instance_;
    new (ptr) ::CefAdapter::ToCefAdapterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::ToCefAdapterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_ToCefAdapterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsToCefAdapterRequest}, {
      &protobuf_IpcMessages_2eproto::scc_info_CreateBrowserWindowRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowTitleRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowSizeRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_ShowDeveloperToolsRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_ExecuteJavaScriptRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_QuerySuccessRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_QueryFailureRequest.base,}};

static void InitDefaultsOnBrowserCreatedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_OnBrowserCreatedRequest_default_instance_;
    new (ptr) ::CefAdapter::OnBrowserCreatedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::OnBrowserCreatedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnBrowserCreatedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnBrowserCreatedRequest}, {}};

static void InitDefaultsOnBrowserClosedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_OnBrowserClosedRequest_default_instance_;
    new (ptr) ::CefAdapter::OnBrowserClosedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::OnBrowserClosedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnBrowserClosedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnBrowserClosedRequest}, {}};

static void InitDefaultsOnContextCreatedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_OnContextCreatedRequest_default_instance_;
    new (ptr) ::CefAdapter::OnContextCreatedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::OnContextCreatedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnContextCreatedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnContextCreatedRequest}, {}};

static void InitDefaultsOnQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_OnQueryRequest_default_instance_;
    new (ptr) ::CefAdapter::OnQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::OnQueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnQueryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnQueryRequest}, {}};

static void InitDefaultsFromCefAdapterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_FromCefAdapterRequest_default_instance_;
    new (ptr) ::CefAdapter::FromCefAdapterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::FromCefAdapterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_FromCefAdapterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsFromCefAdapterRequest}, {
      &protobuf_IpcMessages_2eproto::scc_info_OnBrowserCreatedRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_OnBrowserClosedRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_OnContextCreatedRequest.base,
      &protobuf_IpcMessages_2eproto::scc_info_OnQueryRequest.base,}};

static void InitDefaultsCefAdapterException() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_CefAdapterException_default_instance_;
    new (ptr) ::CefAdapter::CefAdapterException();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::CefAdapterException::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CefAdapterException =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCefAdapterException}, {}};

static void InitDefaultsCefAdapterReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CefAdapter::_CefAdapterReply_default_instance_;
    new (ptr) ::CefAdapter::CefAdapterReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CefAdapter::CefAdapterReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_CefAdapterReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsCefAdapterReply}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_BoolValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int32Value.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_IpcMessages_2eproto::scc_info_CefAdapterException.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateBrowserWindowRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetBrowserWindowTitleRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetBrowserWindowSizeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShowDeveloperToolsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecuteJavaScriptRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuerySuccessRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryFailureRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToCefAdapterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnBrowserCreatedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnBrowserClosedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnContextCreatedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnQueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FromCefAdapterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CefAdapterException.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CefAdapterReply.base);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CreateBrowserWindowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CreateBrowserWindowRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CreateBrowserWindowRequest, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CreateBrowserWindowRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CreateBrowserWindowRequest, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowTitleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowTitleRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowTitleRequest, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowSizeRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowSizeRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::SetBrowserWindowSizeRequest, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ShowDeveloperToolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ShowDeveloperToolsRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ShowDeveloperToolsRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ShowDeveloperToolsRequest, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ExecuteJavaScriptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ExecuteJavaScriptRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ExecuteJavaScriptRequest, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QuerySuccessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QuerySuccessRequest, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QuerySuccessRequest, json_object_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QueryFailureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QueryFailureRequest, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QueryFailureRequest, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::QueryFailureRequest, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, create_browser_window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, set_browser_window_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, set_browser_window_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, show_developer_tools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, execute_javascript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, query_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::ToCefAdapterRequest, query_failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnBrowserCreatedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnBrowserCreatedRequest, browser_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnBrowserClosedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnBrowserClosedRequest, browser_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnContextCreatedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnContextCreatedRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnContextCreatedRequest, frame_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnQueryRequest, browser_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnQueryRequest, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnQueryRequest, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::OnQueryRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, request_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, on_browser_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, on_browser_closed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, on_context_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::FromCefAdapterRequest, on_query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterException, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterException, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterException, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, reply_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, boolean_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, integer_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, double_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CefAdapter::CefAdapterReply, exception_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CefAdapter::CreateBrowserWindowRequest)},
  { 9, -1, sizeof(::CefAdapter::SetBrowserWindowTitleRequest)},
  { 16, -1, sizeof(::CefAdapter::SetBrowserWindowSizeRequest)},
  { 24, -1, sizeof(::CefAdapter::ShowDeveloperToolsRequest)},
  { 32, -1, sizeof(::CefAdapter::ExecuteJavaScriptRequest)},
  { 39, -1, sizeof(::CefAdapter::QuerySuccessRequest)},
  { 46, -1, sizeof(::CefAdapter::QueryFailureRequest)},
  { 54, -1, sizeof(::CefAdapter::ToCefAdapterRequest)},
  { 67, -1, sizeof(::CefAdapter::OnBrowserCreatedRequest)},
  { 73, -1, sizeof(::CefAdapter::OnBrowserClosedRequest)},
  { 79, -1, sizeof(::CefAdapter::OnContextCreatedRequest)},
  { 86, -1, sizeof(::CefAdapter::OnQueryRequest)},
  { 95, -1, sizeof(::CefAdapter::FromCefAdapterRequest)},
  { 105, -1, sizeof(::CefAdapter::CefAdapterException)},
  { 112, -1, sizeof(::CefAdapter::CefAdapterReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_CreateBrowserWindowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_SetBrowserWindowTitleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_SetBrowserWindowSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_ShowDeveloperToolsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_ExecuteJavaScriptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_QuerySuccessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_QueryFailureRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_ToCefAdapterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_OnBrowserCreatedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_OnBrowserClosedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_OnContextCreatedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_OnQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_FromCefAdapterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_CefAdapterException_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CefAdapter::_CefAdapterReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "IpcMessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021IpcMessages.proto\022\nCefAdapter\032\036google/"
      "protobuf/wrappers.proto\"W\n\032CreateBrowser"
      "WindowRequest\022\013\n\003url\030\001 \001(\t\022\r\n\005title\030\002 \001("
      "\t\022\r\n\005width\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\"A\n\034SetB"
      "rowserWindowTitleRequest\022\022\n\nbrowser_id\030\001"
      " \001(\005\022\r\n\005title\030\002 \001(\t\"P\n\033SetBrowserWindowS"
      "izeRequest\022\022\n\nbrowser_id\030\001 \001(\005\022\r\n\005width\030"
      "\003 \001(\005\022\016\n\006height\030\004 \001(\005\"N\n\031ShowDeveloperTo"
      "olsRequest\022\022\n\nbrowser_id\030\001 \001(\005\022\r\n\005width\030"
      "\002 \001(\005\022\016\n\006height\030\003 \001(\005\"<\n\030ExecuteJavaScri"
      "ptRequest\022\022\n\nbrowser_id\030\001 \001(\005\022\014\n\004code\030\002 "
      "\001(\t\"<\n\023QuerySuccessRequest\022\020\n\010query_id\030\001"
      " \001(\003\022\023\n\013json_object\030\002 \001(\t\"R\n\023QueryFailur"
      "eRequest\022\020\n\010query_id\030\001 \001(\003\022\022\n\nerror_code"
      "\030\002 \001(\005\022\025\n\rerror_message\030\003 \001(\t\"\244\004\n\023ToCefA"
      "dapterRequest\0229\n\014request_type\030\001 \001(\0162#.Ce"
      "fAdapter.ToCefAdapterRequestType\022E\n\025crea"
      "te_browser_window\030\002 \001(\0132&.CefAdapter.Cre"
      "ateBrowserWindowRequest\022J\n\030set_browser_w"
      "indow_title\030\003 \001(\0132(.CefAdapter.SetBrowse"
      "rWindowTitleRequest\022H\n\027set_browser_windo"
      "w_size\030\004 \001(\0132\'.CefAdapter.SetBrowserWind"
      "owSizeRequest\022C\n\024show_developer_tools\030\005 "
      "\001(\0132%.CefAdapter.ShowDeveloperToolsReque"
      "st\022@\n\022execute_javascript\030\006 \001(\0132$.CefAdap"
      "ter.ExecuteJavaScriptRequest\0226\n\rquery_su"
      "ccess\030\007 \001(\0132\037.CefAdapter.QuerySuccessReq"
      "uest\0226\n\rquery_failure\030\010 \001(\0132\037.CefAdapter"
      ".QueryFailureRequest\"-\n\027OnBrowserCreated"
      "Request\022\022\n\nbrowser_id\030\001 \001(\005\",\n\026OnBrowser"
      "ClosedRequest\022\022\n\nbrowser_id\030\001 \001(\005\"\?\n\027OnC"
      "ontextCreatedRequest\022\022\n\nbrowser_id\030\001 \001(\005"
      "\022\020\n\010frame_id\030\002 \001(\003\"W\n\016OnQueryRequest\022\022\n\n"
      "browser_id\030\001 \001(\005\022\020\n\010frame_id\030\002 \001(\003\022\020\n\010qu"
      "ery_id\030\003 \001(\003\022\r\n\005query\030\004 \001(\t\"\303\002\n\025FromCefA"
      "dapterRequest\022;\n\014request_type\030\001 \001(\0162%.Ce"
      "fAdapter.FromCefAdapterRequestType\022\?\n\022on"
      "_browser_created\030\002 \001(\0132#.CefAdapter.OnBr"
      "owserCreatedRequest\022=\n\021on_browser_closed"
      "\030\003 \001(\0132\".CefAdapter.OnBrowserClosedReque"
      "st\022\?\n\022on_context_created\030\004 \001(\0132#.CefAdap"
      "ter.OnContextCreatedRequest\022,\n\010on_query\030"
      "\005 \001(\0132\032.CefAdapter.OnQueryRequest\"@\n\023Cef"
      "AdapterException\022\022\n\nerror_code\030\001 \001(\005\022\025\n\r"
      "error_message\030\002 \001(\t\"\277\002\n\017CefAdapterReply\022"
      ")\n\nreply_type\030\001 \001(\0162\025.CefAdapter.ReplyTy"
      "pe\0221\n\rboolean_value\030\002 \001(\0132\032.google.proto"
      "buf.BoolValue\0222\n\rinteger_value\030\003 \001(\0132\033.g"
      "oogle.protobuf.Int32Value\0222\n\014double_valu"
      "e\030\004 \001(\0132\034.google.protobuf.DoubleValue\0222\n"
      "\014string_value\030\005 \001(\0132\034.google.protobuf.St"
      "ringValue\0222\n\texception\030\006 \001(\0132\037.CefAdapte"
      "r.CefAdapterException*V\n\tReplyType\022\010\n\004Vo"
      "id\020\000\022\013\n\007Boolean\020\001\022\013\n\007Integer\020\002\022\n\n\006Double"
      "\020\003\022\n\n\006String\020\004\022\r\n\tException\020\005*\344\001\n\027ToCefA"
      "dapterRequestType\022\016\n\nInitialize\020\000\022\027\n\023Cre"
      "ateBrowserWindow\020\001\022\030\n\024SetBrowserWindowSi"
      "ze\020\002\022\031\n\025SetBrowserWindowTitle\020\003\022\030\n\024SetBr"
      "owserWindowIcon\020\004\022\026\n\022ShowDeveloperTools\020"
      "\005\022\025\n\021ExecuteJavaScript\020\006\022\020\n\014QuerySuccess"
      "\020\007\022\020\n\014QueryFailure\020\010*\217\001\n\031FromCefAdapterR"
      "equestType\022\026\n\022FailedToInitialize\020\000\022\014\n\010Sh"
      "utdown\020\001\022\024\n\020OnBrowserCreated\020\002\022\023\n\017OnBrow"
      "serClosed\020\003\022\024\n\020OnContextCreated\020\004\022\013\n\007OnQ"
      "uery\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2574);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IpcMessages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IpcMessages_2eproto
namespace CefAdapter {
const ::google::protobuf::EnumDescriptor* ReplyType_descriptor() {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IpcMessages_2eproto::file_level_enum_descriptors[0];
}
bool ReplyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ToCefAdapterRequestType_descriptor() {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IpcMessages_2eproto::file_level_enum_descriptors[1];
}
bool ToCefAdapterRequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FromCefAdapterRequestType_descriptor() {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IpcMessages_2eproto::file_level_enum_descriptors[2];
}
bool FromCefAdapterRequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CreateBrowserWindowRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBrowserWindowRequest::kUrlFieldNumber;
const int CreateBrowserWindowRequest::kTitleFieldNumber;
const int CreateBrowserWindowRequest::kWidthFieldNumber;
const int CreateBrowserWindowRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBrowserWindowRequest::CreateBrowserWindowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_CreateBrowserWindowRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.CreateBrowserWindowRequest)
}
CreateBrowserWindowRequest::CreateBrowserWindowRequest(const CreateBrowserWindowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.CreateBrowserWindowRequest)
}

void CreateBrowserWindowRequest::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

CreateBrowserWindowRequest::~CreateBrowserWindowRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.CreateBrowserWindowRequest)
  SharedDtor();
}

void CreateBrowserWindowRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateBrowserWindowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateBrowserWindowRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBrowserWindowRequest& CreateBrowserWindowRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_CreateBrowserWindowRequest.base);
  return *internal_default_instance();
}


void CreateBrowserWindowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.CreateBrowserWindowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool CreateBrowserWindowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.CreateBrowserWindowRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.CreateBrowserWindowRequest.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.CreateBrowserWindowRequest.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.CreateBrowserWindowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.CreateBrowserWindowRequest)
  return false;
#undef DO_
}

void CreateBrowserWindowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.CreateBrowserWindowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CreateBrowserWindowRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CreateBrowserWindowRequest.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.CreateBrowserWindowRequest)
}

::google::protobuf::uint8* CreateBrowserWindowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.CreateBrowserWindowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CreateBrowserWindowRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CreateBrowserWindowRequest.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.CreateBrowserWindowRequest)
  return target;
}

size_t CreateBrowserWindowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.CreateBrowserWindowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateBrowserWindowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.CreateBrowserWindowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBrowserWindowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBrowserWindowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.CreateBrowserWindowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.CreateBrowserWindowRequest)
    MergeFrom(*source);
  }
}

void CreateBrowserWindowRequest::MergeFrom(const CreateBrowserWindowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.CreateBrowserWindowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void CreateBrowserWindowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.CreateBrowserWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBrowserWindowRequest::CopyFrom(const CreateBrowserWindowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.CreateBrowserWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBrowserWindowRequest::IsInitialized() const {
  return true;
}

void CreateBrowserWindowRequest::Swap(CreateBrowserWindowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBrowserWindowRequest::InternalSwap(CreateBrowserWindowRequest* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateBrowserWindowRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetBrowserWindowTitleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBrowserWindowTitleRequest::kBrowserIdFieldNumber;
const int SetBrowserWindowTitleRequest::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBrowserWindowTitleRequest::SetBrowserWindowTitleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowTitleRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.SetBrowserWindowTitleRequest)
}
SetBrowserWindowTitleRequest::SetBrowserWindowTitleRequest(const SetBrowserWindowTitleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  browser_id_ = from.browser_id_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.SetBrowserWindowTitleRequest)
}

void SetBrowserWindowTitleRequest::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_id_ = 0;
}

SetBrowserWindowTitleRequest::~SetBrowserWindowTitleRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.SetBrowserWindowTitleRequest)
  SharedDtor();
}

void SetBrowserWindowTitleRequest::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetBrowserWindowTitleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetBrowserWindowTitleRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetBrowserWindowTitleRequest& SetBrowserWindowTitleRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowTitleRequest.base);
  return *internal_default_instance();
}


void SetBrowserWindowTitleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.SetBrowserWindowTitleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_id_ = 0;
  _internal_metadata_.Clear();
}

bool SetBrowserWindowTitleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.SetBrowserWindowTitleRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.SetBrowserWindowTitleRequest.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.SetBrowserWindowTitleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.SetBrowserWindowTitleRequest)
  return false;
#undef DO_
}

void SetBrowserWindowTitleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.SetBrowserWindowTitleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.SetBrowserWindowTitleRequest.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.SetBrowserWindowTitleRequest)
}

::google::protobuf::uint8* SetBrowserWindowTitleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.SetBrowserWindowTitleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.SetBrowserWindowTitleRequest.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.SetBrowserWindowTitleRequest)
  return target;
}

size_t SetBrowserWindowTitleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.SetBrowserWindowTitleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBrowserWindowTitleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.SetBrowserWindowTitleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBrowserWindowTitleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBrowserWindowTitleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.SetBrowserWindowTitleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.SetBrowserWindowTitleRequest)
    MergeFrom(*source);
  }
}

void SetBrowserWindowTitleRequest::MergeFrom(const SetBrowserWindowTitleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.SetBrowserWindowTitleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void SetBrowserWindowTitleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.SetBrowserWindowTitleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBrowserWindowTitleRequest::CopyFrom(const SetBrowserWindowTitleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.SetBrowserWindowTitleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBrowserWindowTitleRequest::IsInitialized() const {
  return true;
}

void SetBrowserWindowTitleRequest::Swap(SetBrowserWindowTitleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBrowserWindowTitleRequest::InternalSwap(SetBrowserWindowTitleRequest* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetBrowserWindowTitleRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetBrowserWindowSizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBrowserWindowSizeRequest::kBrowserIdFieldNumber;
const int SetBrowserWindowSizeRequest::kWidthFieldNumber;
const int SetBrowserWindowSizeRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBrowserWindowSizeRequest::SetBrowserWindowSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowSizeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.SetBrowserWindowSizeRequest)
}
SetBrowserWindowSizeRequest::SetBrowserWindowSizeRequest(const SetBrowserWindowSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_id_, &from.browser_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.SetBrowserWindowSizeRequest)
}

void SetBrowserWindowSizeRequest::SharedCtor() {
  ::memset(&browser_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
}

SetBrowserWindowSizeRequest::~SetBrowserWindowSizeRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.SetBrowserWindowSizeRequest)
  SharedDtor();
}

void SetBrowserWindowSizeRequest::SharedDtor() {
}

void SetBrowserWindowSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetBrowserWindowSizeRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetBrowserWindowSizeRequest& SetBrowserWindowSizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_SetBrowserWindowSizeRequest.base);
  return *internal_default_instance();
}


void SetBrowserWindowSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.SetBrowserWindowSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&browser_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool SetBrowserWindowSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.SetBrowserWindowSizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.SetBrowserWindowSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.SetBrowserWindowSizeRequest)
  return false;
#undef DO_
}

void SetBrowserWindowSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.SetBrowserWindowSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.SetBrowserWindowSizeRequest)
}

::google::protobuf::uint8* SetBrowserWindowSizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.SetBrowserWindowSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // int32 width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // int32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.SetBrowserWindowSizeRequest)
  return target;
}

size_t SetBrowserWindowSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.SetBrowserWindowSizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  // int32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBrowserWindowSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.SetBrowserWindowSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBrowserWindowSizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBrowserWindowSizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.SetBrowserWindowSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.SetBrowserWindowSizeRequest)
    MergeFrom(*source);
  }
}

void SetBrowserWindowSizeRequest::MergeFrom(const SetBrowserWindowSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.SetBrowserWindowSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void SetBrowserWindowSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.SetBrowserWindowSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBrowserWindowSizeRequest::CopyFrom(const SetBrowserWindowSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.SetBrowserWindowSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBrowserWindowSizeRequest::IsInitialized() const {
  return true;
}

void SetBrowserWindowSizeRequest::Swap(SetBrowserWindowSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBrowserWindowSizeRequest::InternalSwap(SetBrowserWindowSizeRequest* other) {
  using std::swap;
  swap(browser_id_, other->browser_id_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetBrowserWindowSizeRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShowDeveloperToolsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowDeveloperToolsRequest::kBrowserIdFieldNumber;
const int ShowDeveloperToolsRequest::kWidthFieldNumber;
const int ShowDeveloperToolsRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowDeveloperToolsRequest::ShowDeveloperToolsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_ShowDeveloperToolsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.ShowDeveloperToolsRequest)
}
ShowDeveloperToolsRequest::ShowDeveloperToolsRequest(const ShowDeveloperToolsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&browser_id_, &from.browser_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.ShowDeveloperToolsRequest)
}

void ShowDeveloperToolsRequest::SharedCtor() {
  ::memset(&browser_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
}

ShowDeveloperToolsRequest::~ShowDeveloperToolsRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.ShowDeveloperToolsRequest)
  SharedDtor();
}

void ShowDeveloperToolsRequest::SharedDtor() {
}

void ShowDeveloperToolsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShowDeveloperToolsRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowDeveloperToolsRequest& ShowDeveloperToolsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_ShowDeveloperToolsRequest.base);
  return *internal_default_instance();
}


void ShowDeveloperToolsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.ShowDeveloperToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&browser_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&browser_id_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool ShowDeveloperToolsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.ShowDeveloperToolsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.ShowDeveloperToolsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.ShowDeveloperToolsRequest)
  return false;
#undef DO_
}

void ShowDeveloperToolsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.ShowDeveloperToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.ShowDeveloperToolsRequest)
}

::google::protobuf::uint8* ShowDeveloperToolsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.ShowDeveloperToolsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.ShowDeveloperToolsRequest)
  return target;
}

size_t ShowDeveloperToolsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.ShowDeveloperToolsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowDeveloperToolsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.ShowDeveloperToolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowDeveloperToolsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowDeveloperToolsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.ShowDeveloperToolsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.ShowDeveloperToolsRequest)
    MergeFrom(*source);
  }
}

void ShowDeveloperToolsRequest::MergeFrom(const ShowDeveloperToolsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.ShowDeveloperToolsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void ShowDeveloperToolsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.ShowDeveloperToolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowDeveloperToolsRequest::CopyFrom(const ShowDeveloperToolsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.ShowDeveloperToolsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowDeveloperToolsRequest::IsInitialized() const {
  return true;
}

void ShowDeveloperToolsRequest::Swap(ShowDeveloperToolsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowDeveloperToolsRequest::InternalSwap(ShowDeveloperToolsRequest* other) {
  using std::swap;
  swap(browser_id_, other->browser_id_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShowDeveloperToolsRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteJavaScriptRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteJavaScriptRequest::kBrowserIdFieldNumber;
const int ExecuteJavaScriptRequest::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteJavaScriptRequest::ExecuteJavaScriptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_ExecuteJavaScriptRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.ExecuteJavaScriptRequest)
}
ExecuteJavaScriptRequest::ExecuteJavaScriptRequest(const ExecuteJavaScriptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  browser_id_ = from.browser_id_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.ExecuteJavaScriptRequest)
}

void ExecuteJavaScriptRequest::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_id_ = 0;
}

ExecuteJavaScriptRequest::~ExecuteJavaScriptRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.ExecuteJavaScriptRequest)
  SharedDtor();
}

void ExecuteJavaScriptRequest::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecuteJavaScriptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecuteJavaScriptRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteJavaScriptRequest& ExecuteJavaScriptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_ExecuteJavaScriptRequest.base);
  return *internal_default_instance();
}


void ExecuteJavaScriptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.ExecuteJavaScriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  browser_id_ = 0;
  _internal_metadata_.Clear();
}

bool ExecuteJavaScriptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.ExecuteJavaScriptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.ExecuteJavaScriptRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.ExecuteJavaScriptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.ExecuteJavaScriptRequest)
  return false;
#undef DO_
}

void ExecuteJavaScriptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.ExecuteJavaScriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.ExecuteJavaScriptRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.ExecuteJavaScriptRequest)
}

::google::protobuf::uint8* ExecuteJavaScriptRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.ExecuteJavaScriptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.ExecuteJavaScriptRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.ExecuteJavaScriptRequest)
  return target;
}

size_t ExecuteJavaScriptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.ExecuteJavaScriptRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecuteJavaScriptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.ExecuteJavaScriptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteJavaScriptRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteJavaScriptRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.ExecuteJavaScriptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.ExecuteJavaScriptRequest)
    MergeFrom(*source);
  }
}

void ExecuteJavaScriptRequest::MergeFrom(const ExecuteJavaScriptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.ExecuteJavaScriptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void ExecuteJavaScriptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.ExecuteJavaScriptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteJavaScriptRequest::CopyFrom(const ExecuteJavaScriptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.ExecuteJavaScriptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteJavaScriptRequest::IsInitialized() const {
  return true;
}

void ExecuteJavaScriptRequest::Swap(ExecuteJavaScriptRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteJavaScriptRequest::InternalSwap(ExecuteJavaScriptRequest* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecuteJavaScriptRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuerySuccessRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySuccessRequest::kQueryIdFieldNumber;
const int QuerySuccessRequest::kJsonObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySuccessRequest::QuerySuccessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_QuerySuccessRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.QuerySuccessRequest)
}
QuerySuccessRequest::QuerySuccessRequest(const QuerySuccessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json_object().size() > 0) {
    json_object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_object_);
  }
  query_id_ = from.query_id_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.QuerySuccessRequest)
}

void QuerySuccessRequest::SharedCtor() {
  json_object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_id_ = GOOGLE_LONGLONG(0);
}

QuerySuccessRequest::~QuerySuccessRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.QuerySuccessRequest)
  SharedDtor();
}

void QuerySuccessRequest::SharedDtor() {
  json_object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuerySuccessRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuerySuccessRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuerySuccessRequest& QuerySuccessRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_QuerySuccessRequest.base);
  return *internal_default_instance();
}


void QuerySuccessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.QuerySuccessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QuerySuccessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.QuerySuccessRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 query_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string json_object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_object()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json_object().data(), static_cast<int>(this->json_object().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.QuerySuccessRequest.json_object"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.QuerySuccessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.QuerySuccessRequest)
  return false;
#undef DO_
}

void QuerySuccessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.QuerySuccessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->query_id(), output);
  }

  // string json_object = 2;
  if (this->json_object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_object().data(), static_cast<int>(this->json_object().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.QuerySuccessRequest.json_object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->json_object(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.QuerySuccessRequest)
}

::google::protobuf::uint8* QuerySuccessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.QuerySuccessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->query_id(), target);
  }

  // string json_object = 2;
  if (this->json_object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_object().data(), static_cast<int>(this->json_object().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.QuerySuccessRequest.json_object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->json_object(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.QuerySuccessRequest)
  return target;
}

size_t QuerySuccessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.QuerySuccessRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string json_object = 2;
  if (this->json_object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json_object());
  }

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->query_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuerySuccessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.QuerySuccessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySuccessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySuccessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.QuerySuccessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.QuerySuccessRequest)
    MergeFrom(*source);
  }
}

void QuerySuccessRequest::MergeFrom(const QuerySuccessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.QuerySuccessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.json_object().size() > 0) {

    json_object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_object_);
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
}

void QuerySuccessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.QuerySuccessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySuccessRequest::CopyFrom(const QuerySuccessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.QuerySuccessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySuccessRequest::IsInitialized() const {
  return true;
}

void QuerySuccessRequest::Swap(QuerySuccessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySuccessRequest::InternalSwap(QuerySuccessRequest* other) {
  using std::swap;
  json_object_.Swap(&other->json_object_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_id_, other->query_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuerySuccessRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryFailureRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryFailureRequest::kQueryIdFieldNumber;
const int QueryFailureRequest::kErrorCodeFieldNumber;
const int QueryFailureRequest::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryFailureRequest::QueryFailureRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_QueryFailureRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.QueryFailureRequest)
}
QueryFailureRequest::QueryFailureRequest(const QueryFailureRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  ::memcpy(&query_id_, &from.query_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&query_id_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.QueryFailureRequest)
}

void QueryFailureRequest::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(error_code_));
}

QueryFailureRequest::~QueryFailureRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.QueryFailureRequest)
  SharedDtor();
}

void QueryFailureRequest::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryFailureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryFailureRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryFailureRequest& QueryFailureRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_QueryFailureRequest.base);
  return *internal_default_instance();
}


void QueryFailureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.QueryFailureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(error_code_));
  _internal_metadata_.Clear();
}

bool QueryFailureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.QueryFailureRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 query_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.QueryFailureRequest.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.QueryFailureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.QueryFailureRequest)
  return false;
#undef DO_
}

void QueryFailureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.QueryFailureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->query_id(), output);
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.QueryFailureRequest.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.QueryFailureRequest)
}

::google::protobuf::uint8* QueryFailureRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.QueryFailureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->query_id(), target);
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.QueryFailureRequest.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.QueryFailureRequest)
  return target;
}

size_t QueryFailureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.QueryFailureRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 3;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // int64 query_id = 1;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->query_id());
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryFailureRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.QueryFailureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryFailureRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryFailureRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.QueryFailureRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.QueryFailureRequest)
    MergeFrom(*source);
  }
}

void QueryFailureRequest::MergeFrom(const QueryFailureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.QueryFailureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void QueryFailureRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.QueryFailureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryFailureRequest::CopyFrom(const QueryFailureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.QueryFailureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryFailureRequest::IsInitialized() const {
  return true;
}

void QueryFailureRequest::Swap(QueryFailureRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryFailureRequest::InternalSwap(QueryFailureRequest* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_id_, other->query_id_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryFailureRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToCefAdapterRequest::InitAsDefaultInstance() {
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->create_browser_window_ = const_cast< ::CefAdapter::CreateBrowserWindowRequest*>(
      ::CefAdapter::CreateBrowserWindowRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->set_browser_window_title_ = const_cast< ::CefAdapter::SetBrowserWindowTitleRequest*>(
      ::CefAdapter::SetBrowserWindowTitleRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->set_browser_window_size_ = const_cast< ::CefAdapter::SetBrowserWindowSizeRequest*>(
      ::CefAdapter::SetBrowserWindowSizeRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->show_developer_tools_ = const_cast< ::CefAdapter::ShowDeveloperToolsRequest*>(
      ::CefAdapter::ShowDeveloperToolsRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->execute_javascript_ = const_cast< ::CefAdapter::ExecuteJavaScriptRequest*>(
      ::CefAdapter::ExecuteJavaScriptRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->query_success_ = const_cast< ::CefAdapter::QuerySuccessRequest*>(
      ::CefAdapter::QuerySuccessRequest::internal_default_instance());
  ::CefAdapter::_ToCefAdapterRequest_default_instance_._instance.get_mutable()->query_failure_ = const_cast< ::CefAdapter::QueryFailureRequest*>(
      ::CefAdapter::QueryFailureRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToCefAdapterRequest::kRequestTypeFieldNumber;
const int ToCefAdapterRequest::kCreateBrowserWindowFieldNumber;
const int ToCefAdapterRequest::kSetBrowserWindowTitleFieldNumber;
const int ToCefAdapterRequest::kSetBrowserWindowSizeFieldNumber;
const int ToCefAdapterRequest::kShowDeveloperToolsFieldNumber;
const int ToCefAdapterRequest::kExecuteJavascriptFieldNumber;
const int ToCefAdapterRequest::kQuerySuccessFieldNumber;
const int ToCefAdapterRequest::kQueryFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToCefAdapterRequest::ToCefAdapterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_ToCefAdapterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.ToCefAdapterRequest)
}
ToCefAdapterRequest::ToCefAdapterRequest(const ToCefAdapterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_create_browser_window()) {
    create_browser_window_ = new ::CefAdapter::CreateBrowserWindowRequest(*from.create_browser_window_);
  } else {
    create_browser_window_ = NULL;
  }
  if (from.has_set_browser_window_title()) {
    set_browser_window_title_ = new ::CefAdapter::SetBrowserWindowTitleRequest(*from.set_browser_window_title_);
  } else {
    set_browser_window_title_ = NULL;
  }
  if (from.has_set_browser_window_size()) {
    set_browser_window_size_ = new ::CefAdapter::SetBrowserWindowSizeRequest(*from.set_browser_window_size_);
  } else {
    set_browser_window_size_ = NULL;
  }
  if (from.has_show_developer_tools()) {
    show_developer_tools_ = new ::CefAdapter::ShowDeveloperToolsRequest(*from.show_developer_tools_);
  } else {
    show_developer_tools_ = NULL;
  }
  if (from.has_execute_javascript()) {
    execute_javascript_ = new ::CefAdapter::ExecuteJavaScriptRequest(*from.execute_javascript_);
  } else {
    execute_javascript_ = NULL;
  }
  if (from.has_query_success()) {
    query_success_ = new ::CefAdapter::QuerySuccessRequest(*from.query_success_);
  } else {
    query_success_ = NULL;
  }
  if (from.has_query_failure()) {
    query_failure_ = new ::CefAdapter::QueryFailureRequest(*from.query_failure_);
  } else {
    query_failure_ = NULL;
  }
  request_type_ = from.request_type_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.ToCefAdapterRequest)
}

void ToCefAdapterRequest::SharedCtor() {
  ::memset(&create_browser_window_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_type_) -
      reinterpret_cast<char*>(&create_browser_window_)) + sizeof(request_type_));
}

ToCefAdapterRequest::~ToCefAdapterRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.ToCefAdapterRequest)
  SharedDtor();
}

void ToCefAdapterRequest::SharedDtor() {
  if (this != internal_default_instance()) delete create_browser_window_;
  if (this != internal_default_instance()) delete set_browser_window_title_;
  if (this != internal_default_instance()) delete set_browser_window_size_;
  if (this != internal_default_instance()) delete show_developer_tools_;
  if (this != internal_default_instance()) delete execute_javascript_;
  if (this != internal_default_instance()) delete query_success_;
  if (this != internal_default_instance()) delete query_failure_;
}

void ToCefAdapterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToCefAdapterRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToCefAdapterRequest& ToCefAdapterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_ToCefAdapterRequest.base);
  return *internal_default_instance();
}


void ToCefAdapterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.ToCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && create_browser_window_ != NULL) {
    delete create_browser_window_;
  }
  create_browser_window_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_browser_window_title_ != NULL) {
    delete set_browser_window_title_;
  }
  set_browser_window_title_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_browser_window_size_ != NULL) {
    delete set_browser_window_size_;
  }
  set_browser_window_size_ = NULL;
  if (GetArenaNoVirtual() == NULL && show_developer_tools_ != NULL) {
    delete show_developer_tools_;
  }
  show_developer_tools_ = NULL;
  if (GetArenaNoVirtual() == NULL && execute_javascript_ != NULL) {
    delete execute_javascript_;
  }
  execute_javascript_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_success_ != NULL) {
    delete query_success_;
  }
  query_success_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_failure_ != NULL) {
    delete query_failure_;
  }
  query_failure_ = NULL;
  request_type_ = 0;
  _internal_metadata_.Clear();
}

bool ToCefAdapterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.ToCefAdapterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CefAdapter.ToCefAdapterRequestType request_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_type(static_cast< ::CefAdapter::ToCefAdapterRequestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.CreateBrowserWindowRequest create_browser_window = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_browser_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.SetBrowserWindowTitleRequest set_browser_window_title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_browser_window_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.SetBrowserWindowSizeRequest set_browser_window_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_browser_window_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.ShowDeveloperToolsRequest show_developer_tools = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_show_developer_tools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.ExecuteJavaScriptRequest execute_javascript = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execute_javascript()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.QuerySuccessRequest query_success = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_success()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.QueryFailureRequest query_failure = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.ToCefAdapterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.ToCefAdapterRequest)
  return false;
#undef DO_
}

void ToCefAdapterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.ToCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.ToCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->request_type(), output);
  }

  // .CefAdapter.CreateBrowserWindowRequest create_browser_window = 2;
  if (this->has_create_browser_window()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_create_browser_window(), output);
  }

  // .CefAdapter.SetBrowserWindowTitleRequest set_browser_window_title = 3;
  if (this->has_set_browser_window_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_set_browser_window_title(), output);
  }

  // .CefAdapter.SetBrowserWindowSizeRequest set_browser_window_size = 4;
  if (this->has_set_browser_window_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_set_browser_window_size(), output);
  }

  // .CefAdapter.ShowDeveloperToolsRequest show_developer_tools = 5;
  if (this->has_show_developer_tools()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_show_developer_tools(), output);
  }

  // .CefAdapter.ExecuteJavaScriptRequest execute_javascript = 6;
  if (this->has_execute_javascript()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_execute_javascript(), output);
  }

  // .CefAdapter.QuerySuccessRequest query_success = 7;
  if (this->has_query_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_query_success(), output);
  }

  // .CefAdapter.QueryFailureRequest query_failure = 8;
  if (this->has_query_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_query_failure(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.ToCefAdapterRequest)
}

::google::protobuf::uint8* ToCefAdapterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.ToCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.ToCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->request_type(), target);
  }

  // .CefAdapter.CreateBrowserWindowRequest create_browser_window = 2;
  if (this->has_create_browser_window()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_create_browser_window(), deterministic, target);
  }

  // .CefAdapter.SetBrowserWindowTitleRequest set_browser_window_title = 3;
  if (this->has_set_browser_window_title()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_set_browser_window_title(), deterministic, target);
  }

  // .CefAdapter.SetBrowserWindowSizeRequest set_browser_window_size = 4;
  if (this->has_set_browser_window_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_set_browser_window_size(), deterministic, target);
  }

  // .CefAdapter.ShowDeveloperToolsRequest show_developer_tools = 5;
  if (this->has_show_developer_tools()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_show_developer_tools(), deterministic, target);
  }

  // .CefAdapter.ExecuteJavaScriptRequest execute_javascript = 6;
  if (this->has_execute_javascript()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_execute_javascript(), deterministic, target);
  }

  // .CefAdapter.QuerySuccessRequest query_success = 7;
  if (this->has_query_success()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_query_success(), deterministic, target);
  }

  // .CefAdapter.QueryFailureRequest query_failure = 8;
  if (this->has_query_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_query_failure(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.ToCefAdapterRequest)
  return target;
}

size_t ToCefAdapterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.ToCefAdapterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CefAdapter.CreateBrowserWindowRequest create_browser_window = 2;
  if (this->has_create_browser_window()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_browser_window_);
  }

  // .CefAdapter.SetBrowserWindowTitleRequest set_browser_window_title = 3;
  if (this->has_set_browser_window_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_browser_window_title_);
  }

  // .CefAdapter.SetBrowserWindowSizeRequest set_browser_window_size = 4;
  if (this->has_set_browser_window_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_browser_window_size_);
  }

  // .CefAdapter.ShowDeveloperToolsRequest show_developer_tools = 5;
  if (this->has_show_developer_tools()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *show_developer_tools_);
  }

  // .CefAdapter.ExecuteJavaScriptRequest execute_javascript = 6;
  if (this->has_execute_javascript()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *execute_javascript_);
  }

  // .CefAdapter.QuerySuccessRequest query_success = 7;
  if (this->has_query_success()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_success_);
  }

  // .CefAdapter.QueryFailureRequest query_failure = 8;
  if (this->has_query_failure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_failure_);
  }

  // .CefAdapter.ToCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToCefAdapterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.ToCefAdapterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ToCefAdapterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToCefAdapterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.ToCefAdapterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.ToCefAdapterRequest)
    MergeFrom(*source);
  }
}

void ToCefAdapterRequest::MergeFrom(const ToCefAdapterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.ToCefAdapterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_create_browser_window()) {
    mutable_create_browser_window()->::CefAdapter::CreateBrowserWindowRequest::MergeFrom(from.create_browser_window());
  }
  if (from.has_set_browser_window_title()) {
    mutable_set_browser_window_title()->::CefAdapter::SetBrowserWindowTitleRequest::MergeFrom(from.set_browser_window_title());
  }
  if (from.has_set_browser_window_size()) {
    mutable_set_browser_window_size()->::CefAdapter::SetBrowserWindowSizeRequest::MergeFrom(from.set_browser_window_size());
  }
  if (from.has_show_developer_tools()) {
    mutable_show_developer_tools()->::CefAdapter::ShowDeveloperToolsRequest::MergeFrom(from.show_developer_tools());
  }
  if (from.has_execute_javascript()) {
    mutable_execute_javascript()->::CefAdapter::ExecuteJavaScriptRequest::MergeFrom(from.execute_javascript());
  }
  if (from.has_query_success()) {
    mutable_query_success()->::CefAdapter::QuerySuccessRequest::MergeFrom(from.query_success());
  }
  if (from.has_query_failure()) {
    mutable_query_failure()->::CefAdapter::QueryFailureRequest::MergeFrom(from.query_failure());
  }
  if (from.request_type() != 0) {
    set_request_type(from.request_type());
  }
}

void ToCefAdapterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.ToCefAdapterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToCefAdapterRequest::CopyFrom(const ToCefAdapterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.ToCefAdapterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToCefAdapterRequest::IsInitialized() const {
  return true;
}

void ToCefAdapterRequest::Swap(ToCefAdapterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToCefAdapterRequest::InternalSwap(ToCefAdapterRequest* other) {
  using std::swap;
  swap(create_browser_window_, other->create_browser_window_);
  swap(set_browser_window_title_, other->set_browser_window_title_);
  swap(set_browser_window_size_, other->set_browser_window_size_);
  swap(show_developer_tools_, other->show_developer_tools_);
  swap(execute_javascript_, other->execute_javascript_);
  swap(query_success_, other->query_success_);
  swap(query_failure_, other->query_failure_);
  swap(request_type_, other->request_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToCefAdapterRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnBrowserCreatedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnBrowserCreatedRequest::kBrowserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnBrowserCreatedRequest::OnBrowserCreatedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_OnBrowserCreatedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.OnBrowserCreatedRequest)
}
OnBrowserCreatedRequest::OnBrowserCreatedRequest(const OnBrowserCreatedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_id_ = from.browser_id_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.OnBrowserCreatedRequest)
}

void OnBrowserCreatedRequest::SharedCtor() {
  browser_id_ = 0;
}

OnBrowserCreatedRequest::~OnBrowserCreatedRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.OnBrowserCreatedRequest)
  SharedDtor();
}

void OnBrowserCreatedRequest::SharedDtor() {
}

void OnBrowserCreatedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnBrowserCreatedRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnBrowserCreatedRequest& OnBrowserCreatedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_OnBrowserCreatedRequest.base);
  return *internal_default_instance();
}


void OnBrowserCreatedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.OnBrowserCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_id_ = 0;
  _internal_metadata_.Clear();
}

bool OnBrowserCreatedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.OnBrowserCreatedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.OnBrowserCreatedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.OnBrowserCreatedRequest)
  return false;
#undef DO_
}

void OnBrowserCreatedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.OnBrowserCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.OnBrowserCreatedRequest)
}

::google::protobuf::uint8* OnBrowserCreatedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.OnBrowserCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.OnBrowserCreatedRequest)
  return target;
}

size_t OnBrowserCreatedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.OnBrowserCreatedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnBrowserCreatedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.OnBrowserCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnBrowserCreatedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnBrowserCreatedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.OnBrowserCreatedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.OnBrowserCreatedRequest)
    MergeFrom(*source);
  }
}

void OnBrowserCreatedRequest::MergeFrom(const OnBrowserCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.OnBrowserCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void OnBrowserCreatedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.OnBrowserCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnBrowserCreatedRequest::CopyFrom(const OnBrowserCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.OnBrowserCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnBrowserCreatedRequest::IsInitialized() const {
  return true;
}

void OnBrowserCreatedRequest::Swap(OnBrowserCreatedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnBrowserCreatedRequest::InternalSwap(OnBrowserCreatedRequest* other) {
  using std::swap;
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnBrowserCreatedRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnBrowserClosedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnBrowserClosedRequest::kBrowserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnBrowserClosedRequest::OnBrowserClosedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_OnBrowserClosedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.OnBrowserClosedRequest)
}
OnBrowserClosedRequest::OnBrowserClosedRequest(const OnBrowserClosedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  browser_id_ = from.browser_id_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.OnBrowserClosedRequest)
}

void OnBrowserClosedRequest::SharedCtor() {
  browser_id_ = 0;
}

OnBrowserClosedRequest::~OnBrowserClosedRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.OnBrowserClosedRequest)
  SharedDtor();
}

void OnBrowserClosedRequest::SharedDtor() {
}

void OnBrowserClosedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnBrowserClosedRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnBrowserClosedRequest& OnBrowserClosedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_OnBrowserClosedRequest.base);
  return *internal_default_instance();
}


void OnBrowserClosedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.OnBrowserClosedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  browser_id_ = 0;
  _internal_metadata_.Clear();
}

bool OnBrowserClosedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.OnBrowserClosedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.OnBrowserClosedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.OnBrowserClosedRequest)
  return false;
#undef DO_
}

void OnBrowserClosedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.OnBrowserClosedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.OnBrowserClosedRequest)
}

::google::protobuf::uint8* OnBrowserClosedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.OnBrowserClosedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.OnBrowserClosedRequest)
  return target;
}

size_t OnBrowserClosedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.OnBrowserClosedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnBrowserClosedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.OnBrowserClosedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnBrowserClosedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnBrowserClosedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.OnBrowserClosedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.OnBrowserClosedRequest)
    MergeFrom(*source);
  }
}

void OnBrowserClosedRequest::MergeFrom(const OnBrowserClosedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.OnBrowserClosedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void OnBrowserClosedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.OnBrowserClosedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnBrowserClosedRequest::CopyFrom(const OnBrowserClosedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.OnBrowserClosedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnBrowserClosedRequest::IsInitialized() const {
  return true;
}

void OnBrowserClosedRequest::Swap(OnBrowserClosedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnBrowserClosedRequest::InternalSwap(OnBrowserClosedRequest* other) {
  using std::swap;
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnBrowserClosedRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnContextCreatedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnContextCreatedRequest::kBrowserIdFieldNumber;
const int OnContextCreatedRequest::kFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnContextCreatedRequest::OnContextCreatedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_OnContextCreatedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.OnContextCreatedRequest)
}
OnContextCreatedRequest::OnContextCreatedRequest(const OnContextCreatedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frame_id_, &from.frame_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_id_) -
    reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.OnContextCreatedRequest)
}

void OnContextCreatedRequest::SharedCtor() {
  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_id_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
}

OnContextCreatedRequest::~OnContextCreatedRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.OnContextCreatedRequest)
  SharedDtor();
}

void OnContextCreatedRequest::SharedDtor() {
}

void OnContextCreatedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnContextCreatedRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnContextCreatedRequest& OnContextCreatedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_OnContextCreatedRequest.base);
  return *internal_default_instance();
}


void OnContextCreatedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.OnContextCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_id_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
  _internal_metadata_.Clear();
}

bool OnContextCreatedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.OnContextCreatedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frame_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.OnContextCreatedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.OnContextCreatedRequest)
  return false;
#undef DO_
}

void OnContextCreatedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.OnContextCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frame_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.OnContextCreatedRequest)
}

::google::protobuf::uint8* OnContextCreatedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.OnContextCreatedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frame_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.OnContextCreatedRequest)
  return target;
}

size_t OnContextCreatedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.OnContextCreatedRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_id());
  }

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnContextCreatedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.OnContextCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnContextCreatedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnContextCreatedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.OnContextCreatedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.OnContextCreatedRequest)
    MergeFrom(*source);
  }
}

void OnContextCreatedRequest::MergeFrom(const OnContextCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.OnContextCreatedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void OnContextCreatedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.OnContextCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnContextCreatedRequest::CopyFrom(const OnContextCreatedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.OnContextCreatedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnContextCreatedRequest::IsInitialized() const {
  return true;
}

void OnContextCreatedRequest::Swap(OnContextCreatedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnContextCreatedRequest::InternalSwap(OnContextCreatedRequest* other) {
  using std::swap;
  swap(frame_id_, other->frame_id_);
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnContextCreatedRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnQueryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnQueryRequest::kBrowserIdFieldNumber;
const int OnQueryRequest::kFrameIdFieldNumber;
const int OnQueryRequest::kQueryIdFieldNumber;
const int OnQueryRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnQueryRequest::OnQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_OnQueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.OnQueryRequest)
}
OnQueryRequest::OnQueryRequest(const OnQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&frame_id_, &from.frame_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&browser_id_) -
    reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
  // @@protoc_insertion_point(copy_constructor:CefAdapter.OnQueryRequest)
}

void OnQueryRequest::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_id_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
}

OnQueryRequest::~OnQueryRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.OnQueryRequest)
  SharedDtor();
}

void OnQueryRequest::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnQueryRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnQueryRequest& OnQueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_OnQueryRequest.base);
  return *internal_default_instance();
}


void OnQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.OnQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&browser_id_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(browser_id_));
  _internal_metadata_.Clear();
}

bool OnQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.OnQueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 browser_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &browser_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frame_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 query_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &query_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.OnQueryRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.OnQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.OnQueryRequest)
  return false;
#undef DO_
}

void OnQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.OnQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->browser_id(), output);
  }

  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frame_id(), output);
  }

  // int64 query_id = 3;
  if (this->query_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->query_id(), output);
  }

  // string query = 4;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.OnQueryRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.OnQueryRequest)
}

::google::protobuf::uint8* OnQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.OnQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->browser_id(), target);
  }

  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frame_id(), target);
  }

  // int64 query_id = 3;
  if (this->query_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->query_id(), target);
  }

  // string query = 4;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.OnQueryRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.OnQueryRequest)
  return target;
}

size_t OnQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.OnQueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 4;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // int64 frame_id = 2;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_id());
  }

  // int64 query_id = 3;
  if (this->query_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->query_id());
  }

  // int32 browser_id = 1;
  if (this->browser_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->browser_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.OnQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.OnQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.OnQueryRequest)
    MergeFrom(*source);
  }
}

void OnQueryRequest::MergeFrom(const OnQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.OnQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.query_id() != 0) {
    set_query_id(from.query_id());
  }
  if (from.browser_id() != 0) {
    set_browser_id(from.browser_id());
  }
}

void OnQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.OnQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnQueryRequest::CopyFrom(const OnQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.OnQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnQueryRequest::IsInitialized() const {
  return true;
}

void OnQueryRequest::Swap(OnQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnQueryRequest::InternalSwap(OnQueryRequest* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(frame_id_, other->frame_id_);
  swap(query_id_, other->query_id_);
  swap(browser_id_, other->browser_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnQueryRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FromCefAdapterRequest::InitAsDefaultInstance() {
  ::CefAdapter::_FromCefAdapterRequest_default_instance_._instance.get_mutable()->on_browser_created_ = const_cast< ::CefAdapter::OnBrowserCreatedRequest*>(
      ::CefAdapter::OnBrowserCreatedRequest::internal_default_instance());
  ::CefAdapter::_FromCefAdapterRequest_default_instance_._instance.get_mutable()->on_browser_closed_ = const_cast< ::CefAdapter::OnBrowserClosedRequest*>(
      ::CefAdapter::OnBrowserClosedRequest::internal_default_instance());
  ::CefAdapter::_FromCefAdapterRequest_default_instance_._instance.get_mutable()->on_context_created_ = const_cast< ::CefAdapter::OnContextCreatedRequest*>(
      ::CefAdapter::OnContextCreatedRequest::internal_default_instance());
  ::CefAdapter::_FromCefAdapterRequest_default_instance_._instance.get_mutable()->on_query_ = const_cast< ::CefAdapter::OnQueryRequest*>(
      ::CefAdapter::OnQueryRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FromCefAdapterRequest::kRequestTypeFieldNumber;
const int FromCefAdapterRequest::kOnBrowserCreatedFieldNumber;
const int FromCefAdapterRequest::kOnBrowserClosedFieldNumber;
const int FromCefAdapterRequest::kOnContextCreatedFieldNumber;
const int FromCefAdapterRequest::kOnQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FromCefAdapterRequest::FromCefAdapterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_FromCefAdapterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.FromCefAdapterRequest)
}
FromCefAdapterRequest::FromCefAdapterRequest(const FromCefAdapterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_on_browser_created()) {
    on_browser_created_ = new ::CefAdapter::OnBrowserCreatedRequest(*from.on_browser_created_);
  } else {
    on_browser_created_ = NULL;
  }
  if (from.has_on_browser_closed()) {
    on_browser_closed_ = new ::CefAdapter::OnBrowserClosedRequest(*from.on_browser_closed_);
  } else {
    on_browser_closed_ = NULL;
  }
  if (from.has_on_context_created()) {
    on_context_created_ = new ::CefAdapter::OnContextCreatedRequest(*from.on_context_created_);
  } else {
    on_context_created_ = NULL;
  }
  if (from.has_on_query()) {
    on_query_ = new ::CefAdapter::OnQueryRequest(*from.on_query_);
  } else {
    on_query_ = NULL;
  }
  request_type_ = from.request_type_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.FromCefAdapterRequest)
}

void FromCefAdapterRequest::SharedCtor() {
  ::memset(&on_browser_created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_type_) -
      reinterpret_cast<char*>(&on_browser_created_)) + sizeof(request_type_));
}

FromCefAdapterRequest::~FromCefAdapterRequest() {
  // @@protoc_insertion_point(destructor:CefAdapter.FromCefAdapterRequest)
  SharedDtor();
}

void FromCefAdapterRequest::SharedDtor() {
  if (this != internal_default_instance()) delete on_browser_created_;
  if (this != internal_default_instance()) delete on_browser_closed_;
  if (this != internal_default_instance()) delete on_context_created_;
  if (this != internal_default_instance()) delete on_query_;
}

void FromCefAdapterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FromCefAdapterRequest::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FromCefAdapterRequest& FromCefAdapterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_FromCefAdapterRequest.base);
  return *internal_default_instance();
}


void FromCefAdapterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.FromCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && on_browser_created_ != NULL) {
    delete on_browser_created_;
  }
  on_browser_created_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_browser_closed_ != NULL) {
    delete on_browser_closed_;
  }
  on_browser_closed_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_context_created_ != NULL) {
    delete on_context_created_;
  }
  on_context_created_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_query_ != NULL) {
    delete on_query_;
  }
  on_query_ = NULL;
  request_type_ = 0;
  _internal_metadata_.Clear();
}

bool FromCefAdapterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.FromCefAdapterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CefAdapter.FromCefAdapterRequestType request_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_type(static_cast< ::CefAdapter::FromCefAdapterRequestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.OnBrowserCreatedRequest on_browser_created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_browser_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.OnBrowserClosedRequest on_browser_closed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_browser_closed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.OnContextCreatedRequest on_context_created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_context_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.OnQueryRequest on_query = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.FromCefAdapterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.FromCefAdapterRequest)
  return false;
#undef DO_
}

void FromCefAdapterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.FromCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.FromCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->request_type(), output);
  }

  // .CefAdapter.OnBrowserCreatedRequest on_browser_created = 2;
  if (this->has_on_browser_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_on_browser_created(), output);
  }

  // .CefAdapter.OnBrowserClosedRequest on_browser_closed = 3;
  if (this->has_on_browser_closed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_on_browser_closed(), output);
  }

  // .CefAdapter.OnContextCreatedRequest on_context_created = 4;
  if (this->has_on_context_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_on_context_created(), output);
  }

  // .CefAdapter.OnQueryRequest on_query = 5;
  if (this->has_on_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_on_query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.FromCefAdapterRequest)
}

::google::protobuf::uint8* FromCefAdapterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.FromCefAdapterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.FromCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->request_type(), target);
  }

  // .CefAdapter.OnBrowserCreatedRequest on_browser_created = 2;
  if (this->has_on_browser_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_on_browser_created(), deterministic, target);
  }

  // .CefAdapter.OnBrowserClosedRequest on_browser_closed = 3;
  if (this->has_on_browser_closed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_on_browser_closed(), deterministic, target);
  }

  // .CefAdapter.OnContextCreatedRequest on_context_created = 4;
  if (this->has_on_context_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_on_context_created(), deterministic, target);
  }

  // .CefAdapter.OnQueryRequest on_query = 5;
  if (this->has_on_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_on_query(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.FromCefAdapterRequest)
  return target;
}

size_t FromCefAdapterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.FromCefAdapterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CefAdapter.OnBrowserCreatedRequest on_browser_created = 2;
  if (this->has_on_browser_created()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_browser_created_);
  }

  // .CefAdapter.OnBrowserClosedRequest on_browser_closed = 3;
  if (this->has_on_browser_closed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_browser_closed_);
  }

  // .CefAdapter.OnContextCreatedRequest on_context_created = 4;
  if (this->has_on_context_created()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_context_created_);
  }

  // .CefAdapter.OnQueryRequest on_query = 5;
  if (this->has_on_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_query_);
  }

  // .CefAdapter.FromCefAdapterRequestType request_type = 1;
  if (this->request_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FromCefAdapterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.FromCefAdapterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FromCefAdapterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FromCefAdapterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.FromCefAdapterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.FromCefAdapterRequest)
    MergeFrom(*source);
  }
}

void FromCefAdapterRequest::MergeFrom(const FromCefAdapterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.FromCefAdapterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_on_browser_created()) {
    mutable_on_browser_created()->::CefAdapter::OnBrowserCreatedRequest::MergeFrom(from.on_browser_created());
  }
  if (from.has_on_browser_closed()) {
    mutable_on_browser_closed()->::CefAdapter::OnBrowserClosedRequest::MergeFrom(from.on_browser_closed());
  }
  if (from.has_on_context_created()) {
    mutable_on_context_created()->::CefAdapter::OnContextCreatedRequest::MergeFrom(from.on_context_created());
  }
  if (from.has_on_query()) {
    mutable_on_query()->::CefAdapter::OnQueryRequest::MergeFrom(from.on_query());
  }
  if (from.request_type() != 0) {
    set_request_type(from.request_type());
  }
}

void FromCefAdapterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.FromCefAdapterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromCefAdapterRequest::CopyFrom(const FromCefAdapterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.FromCefAdapterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromCefAdapterRequest::IsInitialized() const {
  return true;
}

void FromCefAdapterRequest::Swap(FromCefAdapterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FromCefAdapterRequest::InternalSwap(FromCefAdapterRequest* other) {
  using std::swap;
  swap(on_browser_created_, other->on_browser_created_);
  swap(on_browser_closed_, other->on_browser_closed_);
  swap(on_context_created_, other->on_context_created_);
  swap(on_query_, other->on_query_);
  swap(request_type_, other->request_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FromCefAdapterRequest::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CefAdapterException::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CefAdapterException::kErrorCodeFieldNumber;
const int CefAdapterException::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CefAdapterException::CefAdapterException()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_CefAdapterException.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.CefAdapterException)
}
CefAdapterException::CefAdapterException(const CefAdapterException& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.CefAdapterException)
}

void CefAdapterException::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

CefAdapterException::~CefAdapterException() {
  // @@protoc_insertion_point(destructor:CefAdapter.CefAdapterException)
  SharedDtor();
}

void CefAdapterException::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CefAdapterException::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CefAdapterException::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CefAdapterException& CefAdapterException::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_CefAdapterException.base);
  return *internal_default_instance();
}


void CefAdapterException::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.CefAdapterException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool CefAdapterException::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.CefAdapterException)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CefAdapter.CefAdapterException.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.CefAdapterException)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.CefAdapterException)
  return false;
#undef DO_
}

void CefAdapterException::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.CefAdapterException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CefAdapterException.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.CefAdapterException)
}

::google::protobuf::uint8* CefAdapterException::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.CefAdapterException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CefAdapter.CefAdapterException.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.CefAdapterException)
  return target;
}

size_t CefAdapterException::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.CefAdapterException)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // int32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CefAdapterException::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.CefAdapterException)
  GOOGLE_DCHECK_NE(&from, this);
  const CefAdapterException* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CefAdapterException>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.CefAdapterException)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.CefAdapterException)
    MergeFrom(*source);
  }
}

void CefAdapterException::MergeFrom(const CefAdapterException& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.CefAdapterException)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void CefAdapterException::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.CefAdapterException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CefAdapterException::CopyFrom(const CefAdapterException& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.CefAdapterException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CefAdapterException::IsInitialized() const {
  return true;
}

void CefAdapterException::Swap(CefAdapterException* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CefAdapterException::InternalSwap(CefAdapterException* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CefAdapterException::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CefAdapterReply::InitAsDefaultInstance() {
  ::CefAdapter::_CefAdapterReply_default_instance_._instance.get_mutable()->boolean_value_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::CefAdapter::_CefAdapterReply_default_instance_._instance.get_mutable()->integer_value_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::CefAdapter::_CefAdapterReply_default_instance_._instance.get_mutable()->double_value_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::CefAdapter::_CefAdapterReply_default_instance_._instance.get_mutable()->string_value_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::CefAdapter::_CefAdapterReply_default_instance_._instance.get_mutable()->exception_ = const_cast< ::CefAdapter::CefAdapterException*>(
      ::CefAdapter::CefAdapterException::internal_default_instance());
}
void CefAdapterReply::clear_boolean_value() {
  if (GetArenaNoVirtual() == NULL && boolean_value_ != NULL) {
    delete boolean_value_;
  }
  boolean_value_ = NULL;
}
void CefAdapterReply::clear_integer_value() {
  if (GetArenaNoVirtual() == NULL && integer_value_ != NULL) {
    delete integer_value_;
  }
  integer_value_ = NULL;
}
void CefAdapterReply::clear_double_value() {
  if (GetArenaNoVirtual() == NULL && double_value_ != NULL) {
    delete double_value_;
  }
  double_value_ = NULL;
}
void CefAdapterReply::clear_string_value() {
  if (GetArenaNoVirtual() == NULL && string_value_ != NULL) {
    delete string_value_;
  }
  string_value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CefAdapterReply::kReplyTypeFieldNumber;
const int CefAdapterReply::kBooleanValueFieldNumber;
const int CefAdapterReply::kIntegerValueFieldNumber;
const int CefAdapterReply::kDoubleValueFieldNumber;
const int CefAdapterReply::kStringValueFieldNumber;
const int CefAdapterReply::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CefAdapterReply::CefAdapterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IpcMessages_2eproto::scc_info_CefAdapterReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CefAdapter.CefAdapterReply)
}
CefAdapterReply::CefAdapterReply(const CefAdapterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_boolean_value()) {
    boolean_value_ = new ::google::protobuf::BoolValue(*from.boolean_value_);
  } else {
    boolean_value_ = NULL;
  }
  if (from.has_integer_value()) {
    integer_value_ = new ::google::protobuf::Int32Value(*from.integer_value_);
  } else {
    integer_value_ = NULL;
  }
  if (from.has_double_value()) {
    double_value_ = new ::google::protobuf::DoubleValue(*from.double_value_);
  } else {
    double_value_ = NULL;
  }
  if (from.has_string_value()) {
    string_value_ = new ::google::protobuf::StringValue(*from.string_value_);
  } else {
    string_value_ = NULL;
  }
  if (from.has_exception()) {
    exception_ = new ::CefAdapter::CefAdapterException(*from.exception_);
  } else {
    exception_ = NULL;
  }
  reply_type_ = from.reply_type_;
  // @@protoc_insertion_point(copy_constructor:CefAdapter.CefAdapterReply)
}

void CefAdapterReply::SharedCtor() {
  ::memset(&boolean_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_type_) -
      reinterpret_cast<char*>(&boolean_value_)) + sizeof(reply_type_));
}

CefAdapterReply::~CefAdapterReply() {
  // @@protoc_insertion_point(destructor:CefAdapter.CefAdapterReply)
  SharedDtor();
}

void CefAdapterReply::SharedDtor() {
  if (this != internal_default_instance()) delete boolean_value_;
  if (this != internal_default_instance()) delete integer_value_;
  if (this != internal_default_instance()) delete double_value_;
  if (this != internal_default_instance()) delete string_value_;
  if (this != internal_default_instance()) delete exception_;
}

void CefAdapterReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CefAdapterReply::descriptor() {
  ::protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CefAdapterReply& CefAdapterReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IpcMessages_2eproto::scc_info_CefAdapterReply.base);
  return *internal_default_instance();
}


void CefAdapterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CefAdapter.CefAdapterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && boolean_value_ != NULL) {
    delete boolean_value_;
  }
  boolean_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && integer_value_ != NULL) {
    delete integer_value_;
  }
  integer_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && double_value_ != NULL) {
    delete double_value_;
  }
  double_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && string_value_ != NULL) {
    delete string_value_;
  }
  string_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && exception_ != NULL) {
    delete exception_;
  }
  exception_ = NULL;
  reply_type_ = 0;
  _internal_metadata_.Clear();
}

bool CefAdapterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CefAdapter.CefAdapterReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CefAdapter.ReplyType reply_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reply_type(static_cast< ::CefAdapter::ReplyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue boolean_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value integer_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue double_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue string_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CefAdapter.CefAdapterException exception = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CefAdapter.CefAdapterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CefAdapter.CefAdapterReply)
  return false;
#undef DO_
}

void CefAdapterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CefAdapter.CefAdapterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.ReplyType reply_type = 1;
  if (this->reply_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reply_type(), output);
  }

  // .google.protobuf.BoolValue boolean_value = 2;
  if (this->has_boolean_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean_value(), output);
  }

  // .google.protobuf.Int32Value integer_value = 3;
  if (this->has_integer_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_integer_value(), output);
  }

  // .google.protobuf.DoubleValue double_value = 4;
  if (this->has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_double_value(), output);
  }

  // .google.protobuf.StringValue string_value = 5;
  if (this->has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_string_value(), output);
  }

  // .CefAdapter.CefAdapterException exception = 6;
  if (this->has_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_exception(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CefAdapter.CefAdapterReply)
}

::google::protobuf::uint8* CefAdapterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CefAdapter.CefAdapterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CefAdapter.ReplyType reply_type = 1;
  if (this->reply_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reply_type(), target);
  }

  // .google.protobuf.BoolValue boolean_value = 2;
  if (this->has_boolean_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean_value(), deterministic, target);
  }

  // .google.protobuf.Int32Value integer_value = 3;
  if (this->has_integer_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_integer_value(), deterministic, target);
  }

  // .google.protobuf.DoubleValue double_value = 4;
  if (this->has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_double_value(), deterministic, target);
  }

  // .google.protobuf.StringValue string_value = 5;
  if (this->has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_string_value(), deterministic, target);
  }

  // .CefAdapter.CefAdapterException exception = 6;
  if (this->has_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_exception(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CefAdapter.CefAdapterReply)
  return target;
}

size_t CefAdapterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CefAdapter.CefAdapterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue boolean_value = 2;
  if (this->has_boolean_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *boolean_value_);
  }

  // .google.protobuf.Int32Value integer_value = 3;
  if (this->has_integer_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *integer_value_);
  }

  // .google.protobuf.DoubleValue double_value = 4;
  if (this->has_double_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *double_value_);
  }

  // .google.protobuf.StringValue string_value = 5;
  if (this->has_string_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *string_value_);
  }

  // .CefAdapter.CefAdapterException exception = 6;
  if (this->has_exception()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  // .CefAdapter.ReplyType reply_type = 1;
  if (this->reply_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reply_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CefAdapterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CefAdapter.CefAdapterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CefAdapterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CefAdapterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CefAdapter.CefAdapterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CefAdapter.CefAdapterReply)
    MergeFrom(*source);
  }
}

void CefAdapterReply::MergeFrom(const CefAdapterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CefAdapter.CefAdapterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_boolean_value()) {
    mutable_boolean_value()->::google::protobuf::BoolValue::MergeFrom(from.boolean_value());
  }
  if (from.has_integer_value()) {
    mutable_integer_value()->::google::protobuf::Int32Value::MergeFrom(from.integer_value());
  }
  if (from.has_double_value()) {
    mutable_double_value()->::google::protobuf::DoubleValue::MergeFrom(from.double_value());
  }
  if (from.has_string_value()) {
    mutable_string_value()->::google::protobuf::StringValue::MergeFrom(from.string_value());
  }
  if (from.has_exception()) {
    mutable_exception()->::CefAdapter::CefAdapterException::MergeFrom(from.exception());
  }
  if (from.reply_type() != 0) {
    set_reply_type(from.reply_type());
  }
}

void CefAdapterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CefAdapter.CefAdapterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CefAdapterReply::CopyFrom(const CefAdapterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CefAdapter.CefAdapterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CefAdapterReply::IsInitialized() const {
  return true;
}

void CefAdapterReply::Swap(CefAdapterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CefAdapterReply::InternalSwap(CefAdapterReply* other) {
  using std::swap;
  swap(boolean_value_, other->boolean_value_);
  swap(integer_value_, other->integer_value_);
  swap(double_value_, other->double_value_);
  swap(string_value_, other->string_value_);
  swap(exception_, other->exception_);
  swap(reply_type_, other->reply_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CefAdapterReply::GetMetadata() const {
  protobuf_IpcMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IpcMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CefAdapter
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::CreateBrowserWindowRequest* Arena::CreateMaybeMessage< ::CefAdapter::CreateBrowserWindowRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::CreateBrowserWindowRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::SetBrowserWindowTitleRequest* Arena::CreateMaybeMessage< ::CefAdapter::SetBrowserWindowTitleRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::SetBrowserWindowTitleRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::SetBrowserWindowSizeRequest* Arena::CreateMaybeMessage< ::CefAdapter::SetBrowserWindowSizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::SetBrowserWindowSizeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::ShowDeveloperToolsRequest* Arena::CreateMaybeMessage< ::CefAdapter::ShowDeveloperToolsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::ShowDeveloperToolsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::ExecuteJavaScriptRequest* Arena::CreateMaybeMessage< ::CefAdapter::ExecuteJavaScriptRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::ExecuteJavaScriptRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::QuerySuccessRequest* Arena::CreateMaybeMessage< ::CefAdapter::QuerySuccessRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::QuerySuccessRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::QueryFailureRequest* Arena::CreateMaybeMessage< ::CefAdapter::QueryFailureRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::QueryFailureRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::ToCefAdapterRequest* Arena::CreateMaybeMessage< ::CefAdapter::ToCefAdapterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::ToCefAdapterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::OnBrowserCreatedRequest* Arena::CreateMaybeMessage< ::CefAdapter::OnBrowserCreatedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::OnBrowserCreatedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::OnBrowserClosedRequest* Arena::CreateMaybeMessage< ::CefAdapter::OnBrowserClosedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::OnBrowserClosedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::OnContextCreatedRequest* Arena::CreateMaybeMessage< ::CefAdapter::OnContextCreatedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::OnContextCreatedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::OnQueryRequest* Arena::CreateMaybeMessage< ::CefAdapter::OnQueryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::OnQueryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::FromCefAdapterRequest* Arena::CreateMaybeMessage< ::CefAdapter::FromCefAdapterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::FromCefAdapterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::CefAdapterException* Arena::CreateMaybeMessage< ::CefAdapter::CefAdapterException >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::CefAdapterException >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CefAdapter::CefAdapterReply* Arena::CreateMaybeMessage< ::CefAdapter::CefAdapterReply >(Arena* arena) {
  return Arena::CreateInternal< ::CefAdapter::CefAdapterReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
